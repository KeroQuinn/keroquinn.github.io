<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>为什么我偏要开一个自己的网站写博客？</title>
    <link href="/2021/08/04/why/"/>
    <url>/2021/08/04/why/</url>
    
    <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1444186183&auto=1&height=66"></iframe>  ***写在我的博客正式开张时。***  ***“我需要一个年代来给我自由表达，而不是变成传话筒说他们想说的话。”——《新浪漫主义》“***  在社交网络无比发达的今天，”表达自我“成为所有人上网的出发点。而写作文章的平台太也层出不穷，我的诸多师长、朋友们都开起了公众号。微信公众号阅读、分享方便，影响力大，能大大满足人们对自己的观点沉浸式地”单向输出“的诉求。~~偶尔还能在上面恰点烂钱~~是一种为大众受用的，方便快捷的平台。  而我也经常在QQ空间和朋友圈里聊聊最近发生的事情和我的感想。分享生活，抒发感想，偶尔写作，于我而言，这两个平台远远不够。  QQ空间和朋友圈的动态布置是时间线式的。时间线内有自己的、和好友们发表的东西。一篇动态，人们往往仅会停留一分钟不到的时间，刺激眼球和大脑，阅后即忘。而每发表一篇动态后消息提醒里泛滥的点赞和浏览，也并不能让我感受到”成就感“。我需要我的观点在封闭的时间线和空间里被输出，我希望有真正想了解的人们认真看完它们。我不仅想表达，我希望有人会为了我说的话而略有思考，而不是在大脑皮层上仅仅获得了一两秒的刺激，手指又迅速在充斥着大量支离破碎的碎片信息的时间线上滑动。  所以我费了点力气开了这个博客网站。我希望用它给愿意聆听我的思想的人们带来更好的阅读体验，我也希望用它找到愿意与我共鸣的人。进入网站，你的时间线里只有我一个人，和我说的话。点进去看完，你会为了我的说的话思考片刻。这就是我想要的。就像我喜欢的专辑——yeezus里，每一首歌的开头似乎都是并不想给人留下好的第一印象的”噪音“。就在这几十秒的噪音后，才是真正的好内容。这几十秒把所有不关心他的人都推走，留下真正欣赏自己的人。在封闭的每一款社交网络中，对一个外部网站的访问是繁琐的。所以我愿意在这里写写东西，等待真正的好朋友来探望。它是我的藏身处。  Anyway，做这个网站的初衷不仅是记录生活、分享思潮，还会有一些技术类的文章。但我实在太懒了......希望自己除了胡侃大山，也能写点小教程或者抽点时间在这复盘自己做过的小项目。谢谢你的停留。  更多内容，敬请期待。]]></content>
    
    
    
    <tags>
      
      <tag>生活随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一篇随笔</title>
    <link href="/2021/05/01/adaily/"/>
    <url>/2021/05/01/adaily/</url>
    
    <content type="html"><![CDATA[<h1 id="理想不死"><a href="#理想不死" class="headerlink" title="理想不死"></a>理想不死</h1><h2 id="2021-03-09-于学校"><a href="#2021-03-09-于学校" class="headerlink" title="2021.03.09 于学校"></a>2021.03.09 于学校</h2><p>2020年12月，北京交通大学一名大三学生从宿舍楼上纵身一跃，离开了这个世界。他是我的一位兄长的朋友，一位军事迷，一位理想主义者……他是共产主义的坚定信仰者，我们亲爱的达瓦里氏。<br>据我的兄长的描述，去年的北交大格外不太平。疫情后的第一个学期，人们普遍消沉和疲惫，但学业更加紧张。学校压缩了教学周，并在周末及假期穿插小学期课程。教学周只有14周，第15周考试。自杀的同志所在的机电工程系保研名额竞争异常激烈，他也为了保研，努力争取<br>漂亮的绩点，参与到“内卷”中。因小学期及教学周压缩的特殊情况，同学们越来越“卷”了。抢不到图书馆座位的同学们躲进校园内的ATM机房内进行“机器学习”，或藏身地下室进行“深度学习”。而抢图书馆座位的外挂软件层出不穷，招数繁多，连外挂们都“卷”了起来。<br>而他，就在这无尽的内卷中失去信仰。他在遗书中写道“二十年来我坚信做题是唯一出人头地的途径，我因此放弃了其他的方向，使得做题成为我唯一而且是最为突出的优势，并且相信这是唯一的正途。到了大学之后，我竟然听信了某些自由派的鬼话，妄图“全面发展”，因而舍弃了做题这一优势项目。当我意识到问题所在时，为时已晚。这不啻于我的“戈尔巴乔夫改革”，摧毁了我的根基。接下来呢？生活无望，希望崩塌，对明天的期待已经毁灭殆尽，没有了信念和理想。很多美好的事物都毁在这一点上。因为没有了信念，斯大林格勒的62集团军的红军战士们最后退化成了阿富汗战争里的炮灰；的黎波里海岸上的美国海军陆战队变成了PTSD集中营。至于我，失去信念和理想之后就是今天的结局——’苏联解体‘。<br>这位同志除了自杀就没有别的办法了吗？来自中国人民大学的教授周濂评价道——”这不是’左‘和’右‘的问题。知识结构残缺、脱离现实、对阶级矛盾和国际形式的应激状态和无力感带入现实生活中，会使人进入一种较为偏激的状态（这不是原话，但大意如此。在学校写随笔资料来源不在身边！）。“<br>我们都在生活中挣扎，令我心碎的事实，我已经看得太多。资本家丑恶的獠牙慢慢从他们的嘴里溢出来，国内的工人运动式微。人们，工人们，越来越麻木，越来越温驯，并不介意锁链套进他们的脖子上的那天的到来——看起来，听起来，就很绝望？我要做什么，我们能做什么？我想过死亡，但我不选择死亡。我大胆地探讨死亡。亲手结束自己的生命，它似乎会给我们的生带来更为悲悯的意义，会让你穷尽一生最想为之呐喊的东西，于彼时达到最大音量。但此后，便是长久的余波与永远的静默。<br>同志，不要对生活失去希望。请多元地看待问题，接受更多的新思想。不要被打倒，不要让他们期盼的那一天到来。<br>”我曾经痛恨过很多东西，资本家，白匪军，官僚，保守主义的老棺材瓤子以及它们的走狗们。但是我已经等不到亲手消灭它们的那一天了，同志们，请代替我完成这个任务，拜托了。“他在遗书中写道。<br>因为没有了信念，斯大林格勒的62集团军的红军战士们最后退化成了阿富汗战争里的炮灰。可轻巧敏捷的伊-15曾在西班牙上空肆意地飞行，虽然它质量有点差；T-34/85与IS-2将德棍们的虎式坦克打得满地找牙。离家的战士们唱着喀秋莎，而瓦莉娅和同学们直到波兰白军的绞刑架前，都唱着华沙曲。<br>若前行的道路没有炬火，我就是炬火。我们会亲手完成你的理想，它永远不死。<br>让我们忠于理想，让我们面对现实。——切.格瓦拉<br>走好。  </p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>写下这篇随笔的时候，正值草长莺飞的春天。我仍记得提笔的那个晚自习，经过了一天的休息回到学校，我的内心满是愤慨和寂寞。连续收到好几个同志的死讯，社交网络上的最底层，工人们哀鸿遍野。我怀着愤怒和伤感，在这美丽的春天向左转了。那时的我正值人生的转折点，大小私事让我焦头烂额。我把对自己关爱转移到同志们的身上，却让我一天比一天更不好受。面对我的”左转“，亲密的伙伴更是不理解我，认为这是不必的。然而我认为，对世界拥有清楚的认识比在生活的大网编织出的牢笼中幸福的活着，更加重要。我在真相中既清醒，又痛苦。在这个春天的随笔中，我写下几千字、几千字的，为了同志们的，呐喊。  关于我对左转的思考与心路历程，日后新开一篇文章谈谈吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>随笔</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>back!</title>
    <link href="/2021/02/03/back/"/>
    <url>/2021/02/03/back/</url>
    
    <content type="html"><![CDATA[<h1 id="我回来了！"><a href="#我回来了！" class="headerlink" title="我回来了！"></a><a href="#%E6%88%91%E5%9B%9E%E6%9D%A5%E4%BA%86%EF%BC%81" title="我回来了！"></a>我回来了！</h1><h2 id="来了！"><a href="#来了！" class="headerlink" title="来了！"></a><a href="#%E6%9D%A5%E4%BA%86%EF%BC%81" title="来了！"></a>来了！</h2><h1 id="了！"><a href="#了！" class="headerlink" title="了！"></a><a href="#%E4%BA%86%EF%BC%81" title="了！"></a>了！</h1><p>上一次写博客可能是疫情的时候了，这次重拾博客的契机是放寒假了+不能白白浪费上godaddy买的新域名。旧的搭载我的博客的笔记本因为有一天我作死重装了个Linux所有配置全都灰飞烟灭（这就是静态网页的弊端？），重新配置贼拉麻烦，干脆放着不管。最近换了新电脑，弄了两三小时暂且成功了？<br>我一共上godaddy买了两个域名，这个用来做blog，另一个用来放我拍的照片和做点小实验吧。<del>新的flag出现了！</del><br>这个寒假要做的事情很多，也会有很多新的东西值得记录。敬请期待我的博客们吧XD<br>have a good ride :)</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>2019    再见</title>
    <link href="/2019/12/27/2019/"/>
    <url>/2019/12/27/2019/</url>
    
    <content type="html"><![CDATA[<p>#2019的 最后一笔<br>“现在我家的人多了 一个爱人 和两个娃”<br>于是我的 成为高中生的第一个学期就在郭磊哥这句又温馨 又有点让他不好意思的话里结束了<br>这个学期 学到了很多 只能这样子总结<br>为了谁而难受过 挣扎过 怀疑过<br>很多想要放弃的事情 都奇迹般地坚持了下去<br>努力过 却没有拼命 才觉得自己的努力是那么力不从心 因为我要面对的不只是286个人了 也不是那么容易就可以在第一个考场考试了<br>虽然 也拿了个第一 但是却更让自己感受到了自身的渺小与无助</p><p>我真的有我描述得那么难受吗？我得到了新的班级里新的好朋友们的欣赏与爱 来自上一届的学姐们的善意 来自许多老师给予的关怀与帮助 来自我的可爱的家人们的小心又别扭的关心</p><p>我真的有我描述得那么开心吗？明明觉得自己能改变的事情 却还是老样子 明明觉得自己能够处理的事情 却还是愈发棘手 明明已经解开的心结 却又重新被绑得死死的 明明已经走出的阴霾 却又浮现在我头顶</p><p>这学期我做了什么？我收获了什么？我成为我想变成的样子了吗？我让他人因我的存在而感到温暖了吗？</p><p>到头来，我只感动了我自己。</p><pre><code>                          ——2019年的第一个学期末，于龙潭</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>生活随记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>今天学了啥之map</title>
    <link href="/2019/08/11/map/"/>
    <url>/2019/08/11/map/</url>
    
    <content type="html"><![CDATA[<h1 id="今天学了啥之map"><a href="#今天学了啥之map" class="headerlink" title="今天学了啥之map"></a>今天学了啥之map</h1><h1 id="STL应用之map"><a href="#STL应用之map" class="headerlink" title="STL应用之map"></a><a href="#STL%E5%BA%94%E7%94%A8%E4%B9%8Bmap" title="STL应用之map"></a>STL应用之map</h1><h2 id="Map是啥？"><a href="#Map是啥？" class="headerlink" title="Map是啥？"></a><a href="#Map%E6%98%AF%E5%95%A5%EF%BC%9F" title="Map是啥？"></a>Map是啥？</h2><blockquote><p>Map就是从键（key）到值（value）的映射。因为重载了[]运算符，map像是数组的“高级版”。<sup id="fnref:1" class="footnote-ref"><a href="#fn:1"><span class="hint--top hint--rounded" aria-label="刘汝佳.算法竞赛入门经典(第二版)[M].北京: 清华大学出版社, 2014: 113">[1]</span></a></sup><br>Map是STL的一个关联容器，它提供一对一（其中第一个可以称为关键字，每个关键字只能在map中出现一次，第二个可能称为该关键字的值）的数据 处理能力，由于这个特性，它完成有可能在我们处理一对一数据的时候，在编程上提供快速通道。这里说下map内部数据的组织，map内部自建一颗红黑树(一 种非严格意义上的平衡二叉树)，这颗树具有对数据自动排序的功能，所以在map内部所有的数据都是有序的。</p></blockquote><p>所以可以说map的底层是tree。<br>map的key不可以重复，但value可以。而在multimap中key是可以重复的。</p><h2 id="Map的应用"><a href="#Map的应用" class="headerlink" title="Map的应用"></a><a href="#Map%E7%9A%84%E5%BA%94%E7%94%A8" title="Map的应用"></a>Map的应用</h2><p>开始当然需要<code>#include &amp;lt;map&amp;gt;</code>啦<br>在赋值之前，我们需要<code>map&amp;lt;string, int&amp;gt; dict;</code><br><del>int声明整型变量，string声明字符串，相信傻瓜都知道</del><br>这两者取决你赋值的数据类型和谁对应key和value<br>之后插入数据有多种方法</p><ul><li><p>  我最喜欢用的婴儿方法<br><code>dict[“key”]=value</code></p></li><li><p>  杜老师教的需要打多一点字的方法<br><code>dict.insert(map&amp;lt;string, int&amp;gt;::value_type(“key”, value))</code></p></li><li><p>  CSDN上看的用数组插入的方法<br><code>map&amp;lt;int, string&amp;gt; mapStudent; mapStudent[1] = “student_one”;</code></p></li><li><p>我忘了</p><h2 id="插入数据后，能干点什么？"><a href="#插入数据后，能干点什么？" class="headerlink" title="插入数据后，能干点什么？"></a><a href="#%E6%8F%92%E5%85%A5%E6%95%B0%E6%8D%AE%E5%90%8E%EF%BC%8C%E8%83%BD%E5%B9%B2%E7%82%B9%E4%BB%80%E4%B9%88%EF%BC%9F" title="插入数据后，能干点什么？"></a>插入数据后，能干点什么？</h2></li></ul><h3 id="在？看看map"><a href="#在？看看map" class="headerlink" title="在？看看map"></a><a href="#%E5%9C%A8%EF%BC%9F%E7%9C%8B%E7%9C%8Bmap" title="在？看看map"></a>在？看看map</h3><p><code>bool empty()</code>查询map是否为空<br><code>size_t size()</code>查询map中键值对的数量<br>count()<br>可以这样用：当你需要知道一个key的value，却不知道这个key是否存在时，可以用count返回元素出现的次数，再根据有无继续操作<br>（其实find好像也可以这样用哒！返回1或0）<br>（反正我学了这个函数就要写进blog里！）<br>枚举整个map容器<br><code>for (map&amp;lt;string, int&amp;gt;::iterator it = dict.begin(); it != dict.end(); ++it)</code></p><ul><li><p>查找，删除，交换等…<br>课里没用上…</p><h2 id="样例代码"><a href="#样例代码" class="headerlink" title="样例代码"></a><a href="#%E6%A0%B7%E4%BE%8B%E4%BB%A3%E7%A0%81" title="样例代码"></a>样例代码</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;map&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-meta-string">&lt;string&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-keyword">int</span> <span class="hljs-title">main</span><span class="hljs-params">()</span></span><br><span class="hljs-function"></span>&#123;<br>  map&lt;string, <span class="hljs-keyword">int</span>&gt; dict;<br>  dict[<span class="hljs-string">&quot;王大狗&quot;</span>]=<span class="hljs-number">1</span>;<br>  dict[<span class="hljs-string">&quot;王二狗&quot;</span>] = <span class="hljs-number">2</span>;<br>  dict.<span class="hljs-built_in">insert</span>(map&lt;string, <span class="hljs-keyword">int</span>&gt;::<span class="hljs-built_in">value_type</span>(<span class="hljs-string">&quot;李狗蛋&quot;</span>, <span class="hljs-number">1</span>));<br>  <span class="hljs-keyword">if</span> (dict.<span class="hljs-built_in">count</span>(<span class="hljs-string">&quot;王大狗&quot;</span>)) &#123;<br>      cout &lt;&lt; <span class="hljs-string">&quot;王大狗在&quot;</span> &lt;&lt; dict[<span class="hljs-string">&quot;王大狗&quot;</span>] &lt;&lt; <span class="hljs-string">&quot;村&quot;</span> &lt;&lt; endl;<br>  &#125;<br>  <span class="hljs-keyword">else</span><br>      cout &lt;&lt; <span class="hljs-string">&quot;他进城打工了！&quot;</span> &lt;&lt; endl;<br>  cout &lt;&lt; <span class="hljs-string">&quot;开始大狗枚举&quot;</span> &lt;&lt; endl;<br>  <span class="hljs-keyword">for</span> (map&lt;string, <span class="hljs-keyword">int</span>&gt;::iterator it = dict.<span class="hljs-built_in">begin</span>(); it != dict.<span class="hljs-built_in">end</span>(); ++it)<br>      cout &lt;&lt; it-&gt;first &lt;&lt; <span class="hljs-string">&quot;在&quot;</span> &lt;&lt; it-&gt;second &lt;&lt; <span class="hljs-string">&quot;班&quot;</span> &lt;&lt; endl;<br>  dict.<span class="hljs-built_in">clear</span>();<br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><p>应该不用注释也能看懂~</p><h2 id="习题"><a href="#习题" class="headerlink" title="习题"></a><a href="#%E4%B9%A0%E9%A2%98" title="习题"></a>习题</h2><p>正在写，写完update，咕咕咕</p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>今天学了啥</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>It works!</title>
    <link href="/2019/08/06/works/"/>
    <url>/2019/08/06/works/</url>
    
    <content type="html"><![CDATA[<h1 id="这是我基于Hexo的第一篇博文。"><a href="#这是我基于Hexo的第一篇博文。" class="headerlink" title="这是我基于Hexo的第一篇博文。"></a>这是我基于Hexo的第一篇博文。</h1><p><em>也是我在自己的网站上写的第一个东西~</em></p><p><em>希望不会荒废吧~</em><br>网站托管到GitHub上面 不需要任何费用<br>这个破网站居然能运行了，amazing</p><p>也是我纯手工搭建的~！<br>相比之前用过的Wordpress和Godaddy提供的建站大师，Hexo相对轻量化，并且更容易自定义。</p><p>因为Wordpress和建站大师实在是太臃肿太傻瓜了<br><del>不能体现我一流的乱搞水平</del></p><p>建站过程中，因为不熟悉Git和Nodejs，还是踩了很多坑<br>所幸都解决啦！<br>搞好了Git，以后代码push到自己的GitHub仓库里也会非常的简单</p><p>话说我差点就学用FTP了呢…幸好早点下定决心搞Hexo！</p><p>我的破网站目前也开源了（废话）</p><p>麻烦给个Star吧~<br>虽然没什么好给的  </p><p>以后写点什么好呢~</p>]]></content>
    
    
    
    <tags>
      
      <tag>develop</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
